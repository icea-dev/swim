<?xml version="1.0"?>
<!-- edited with XMLSpy v2007 sp1 (http://www.altova.com) by jrom (C.N.E.S.) -->
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by jrom (CNES) -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gml="http://www.opengis.net/gml" xmlns:ows="http://www.opengis.net/ows" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wfs="http://www.opengis.net/wfs" targetNamespace="http://www.opengis.net/wfs" elementFormDefault="qualified" version="1.1.0">
	<!-- ==============================================================

        Includes and Imports

        ============================================================== -->
	<xsd:import namespace="http://www.opengis.net/gml" schemaLocation="../../gml/3.1.1/base/gmlSubset.xsd"/>
	<xsd:import namespace="http://www.opengis.net/ogc" schemaLocation="../../filter/1.1.0/filter.xsd"/>
	<xsd:import namespace="http://www.opengis.net/ows" schemaLocation="../../ows/1.0.0/owsGetCapabilities.xsd"/>
	<!-- ================================================================== -->
	<!-- =   BASE REQUEST TYPE                                            = -->
	<!-- ================================================================== -->
	<xsd:complexType name="BaseRequestType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>

            XML encoded WFS operation request base, for all operations

            except GetCapabilities.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="service" type="ows:ServiceType" use="optional" default="WFS">
			<xsd:annotation>
				<xsd:documentation>

              The service attribute is included to support service 

              endpoints that implement more than one OGC service.

              For example, a single CGI that implements WMS, WFS

              and WCS services. 

              The endpoint can inspect the value of this attribute 

              to figure out which service should process the request.

              The value WFS indicates that a web feature service should

              process the request.

              This parameter is somewhat redundant in the XML encoding

              since the request namespace can be used to determine

              which service should process any give request.  For example,

              wfs:GetCapabilities and easily be distinguished from

              wcs:GetCapabilities using the namespaces.

           </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string" use="optional" default="1.1.0">
			<xsd:annotation>
				<xsd:documentation>

               The version attribute is used to indicate the version of the

               WFS specification that a request conforms to.  All requests in

               this schema conform to V1.1 of the WFS specification.

               For WFS implementations that support more than one version of

               a WFS sepcification ... if the version attribute is not 

               specified then the service should assume that the request

               conforms to greatest available specification version.

           </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="handle" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>

               The handle attribute allows a client application

               to assign a client-generated request identifier

               to a WFS request.  The handle is included to

               facilitate error reporting.  A WFS may report the

               handle in an exception report to identify the

               offending request or action.  If the handle is not

               present, then the WFS may employ other means to

               localize the error (e.g. line numbers).

            </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<!-- ============================================================== -->
	<!-- = PROPERTY NAME ELEMENT                                      = -->
	<!-- ============================================================== -->
	<!--PHR  changed name from ProperyName to PropertyName (!!!) -->
	<xsd:element name="PropertyName" type="xsd:QName"/>
	<!--PHR : - type="xsd:QName" suppressed from XlinkPropertyName element -->
	<!--PHR : - substitutionGroup="wfs:PropertyName" suppressed

             reason : not accepted by XMLSPY 2006 : "not validly derived"

  -->
	<xsd:element name="XlinkPropertyName">
		<xsd:annotation>
			<xsd:documentation>

            This element may be used in place of an wfs:PropertyName element

            in a wfs:Query element in a wfs:GetFeature element to selectively

            request the traversal of nested XLinks in the returned element for

            the named property. This element may not be used in other requests

            -- GetFeatureWithLock, LockFeature, Insert, Update, Delete -- in

            this version of the WFS specification.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="traverseXlinkDepth" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>

                  This attribute indicates the depth to which nested property

                  XLink linking element locator attribute (href) XLinks are

                  traversed and resolved if possible.  A value of "1" indicates

                  that one linking element locator attribute (href) Xlink

                  will be traversed and the referenced element returned if

                  possible, but nested property XLink linking element locator

                  attribute (href) XLinks in the returned element are not

                  traversed.  A value of  "*" indicates that all nested property

                  XLink linking element locator attribute (href) XLinks will be

                  traversed and the referenced elements returned if possible.

                  The range of valid values for this attribute consists of

                  positive integers plus "*".

               </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="traverseXlinkExpiry" type="xsd:positiveInteger" use="optional">
				<xsd:annotation>
					<xsd:documentation>

                  The traverseXlinkExpiry attribute value is specified in

                  minutes It indicates how long a Web Feature Service should

                  wait to receive a response to a nested GetGmlObject request.	

               </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<!-- ================================================================== -->
	<!-- =   GETCAPABILITIES Request and Response                         = -->
	<!-- ================================================================== -->
	<!-- REQUEST -->
	<xsd:element name="GetCapabilities" type="wfs:GetCapabilitiesType"/>
	<xsd:complexType name="GetCapabilitiesType">
		<xsd:annotation>
			<xsd:documentation>

          Request to a WFS to perform the GetCapabilities operation.

          This operation allows a client to retrieve a Capabilities

          XML document providing metadata for the specific WFS server.


          The GetCapapbilities element is used to request that a Web Feature

          Service generate an XML document describing the organization

          providing the service, the WFS operations that the service

          supports, a list of feature types that the service can operate

          on and list of filtering capabilities that the service support.

          Such an XML document is called a capabilities document.

       </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ows:GetCapabilitiesType">
				<xsd:attribute name="service" type="ows:ServiceType" use="optional" default="WFS"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- RESPONSE -->
	<!--PHR : - substitutionGroup="ows:Capabilities" suppressed -->
	<xsd:element name="WFS_Capabilities" type="wfs:WFS_CapabilitiesType"/>
	<xsd:complexType name="WFS_CapabilitiesType">
		<xsd:annotation>
			<xsd:documentation>

            XML encoded WFS GetCapabilities operation response. This

            document provides clients with service metadata about a

            specific service instance, including metadata about the

            tightly-coupled data served. If the server does not implement

            the updateSequence parameter, the server shall always return

            the complete Capabilities document, without the updateSequence

            parameter. When the server implements the updateSequence

            parameter and the GetCapabilities operation request included

            the updateSequence parameter with the current value, the server

            shall return this element with only the "version" and

            "updateSequence" attributes. Otherwise, all optional elements

            shall be included or not depending on the actual value of the

            Contents parameter in the GetCapabilities operation request.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ows:CapabilitiesBaseType">
				<xsd:sequence>
					<xsd:element ref="wfs:FeatureTypeList" minOccurs="0"/>
					<xsd:element ref="ogc:Filter_Capabilities"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="FeatureTypeList" type="wfs:FeatureTypeListType"/>
	<xsd:complexType name="FeatureTypeListType">
		<xsd:annotation>
			<xsd:documentation>

            A list of feature types available from  this server.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="FeatureType" type="wfs:FeatureTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FeatureTypeType">
		<xsd:annotation>
			<xsd:documentation>

            An element of this type that describes a feature in an application

            namespace shall have an xml xmlns specifier, e.g.

            xmlns:bo="http://www.BlueOx.org/BlueOx"

         </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:QName">
				<xsd:annotation>
					<xsd:documentation>

                  Name of this feature type, including any namespace prefix

               </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Title" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>

                  Title of this feature type, normally used for display

                  to a human.

               </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Abstract" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>

                  Brief narrative description of this feature type, normally

                  used for display to a human.

               </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="ows:Keywords" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="DefaultSRS" type="xsd:anyURI">
						<xsd:annotation>
							<xsd:documentation>

                        The DefaultSRS element indicated which spatial

                        reference system shall be used by a WFS to

                        express the state of a spatial feature if not

                        otherwise explicitly identified within a query

                        or transaction request.  The SRS may be indicated

                        using either the EPSG form (EPSG:posc code) or

                        the URL form defined in subclause 4.3.2 of

                        refernce[2].

                     </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OtherSRS" type="xsd:anyURI" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>

                        The OtherSRS element is used to indicate other 

                        supported SRSs within query and transaction 

                        operations.  A supported SRS means that the 

                        WFS supports the transformation of spatial

                        properties between the OtherSRS and the internal

                        storage SRS.  The effects of such transformations 

                        must be considered when determining and declaring 

                        the guaranteed data accuracy.

                     </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:element name="NoSRS">
					<xsd:complexType/>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="OutputFormats" type="wfs:OutputFormatListType" minOccurs="0"/>
			<xsd:element ref="ows:WGS84BoundingBox" maxOccurs="unbounded"/>
			<xsd:element name="MetadataURL" type="wfs:MetadataURLType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OutputFormatListType">
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element name="Format" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MetadataURLType">
		<xsd:annotation>
			<xsd:documentation>

            A Web Feature Server MAY use zero or more MetadataURL

            elements to offer detailed, standardized metadata about

            the data underneath a particular feature type.  The type

            attribute indicates the standard to which the metadata

            complies; the format attribute indicates how the metadata is

            structured.  Two types are defined at present:

            'TC211' or 'ISO19115' = ISO TC211 19115; 

            'FGDC'                = FGDC CSDGM.

            'ISO19139'            = ISO 19139

         </xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="type" use="required">
					<xsd:simpleType>
						<xsd:restriction base="xsd:NMTOKEN">
							<xsd:enumeration value="TC211"/>
							<xsd:enumeration value="FGDC"/>
							<xsd:enumeration value="19115"/>
							<xsd:enumeration value="19139"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="format" use="required">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="text/xml"/>
							<xsd:enumeration value="text/html"/>
							<xsd:enumeration value="text/sgml"/>
							<xsd:enumeration value="text/plain"/>
						</xsd:restriction>
						<!-- PHR :  - xsd:NMTOKEN replaced by xsd:string -->
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<!-- ================================================================== -->
	<!-- =   DESCRIBEFEATURETYPE Request and Response                     = -->
	<!-- ================================================================== -->
	<!-- REQUEST -->
	<xsd:element name="DescribeFeatureType" type="wfs:DescribeFeatureTypeType">
		<xsd:annotation>
			<xsd:documentation>

            The DescribeFeatureType element is used to request that a Web

            Feature Service generate a document describing one or more 

            feature types.

         </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="DescribeFeatureTypeType">
		<xsd:annotation>
			<xsd:documentation>

            The DescribeFeatureType operation allows a client application

            to request that a Web Feature Service describe one or more

            feature types.   A Web Feature Service must be able to generate

            feature descriptions as valid GML3 application schemas.


            The schemas generated by the DescribeFeatureType operation can

            be used by a client application to validate the output.


            Feature instances within the WFS interface must be specified

            using GML3.  The schema of feature instances specified within

            the WFS interface must validate against the feature schemas 

            generated by the DescribeFeatureType request.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wfs:BaseRequestType">
				<xsd:sequence>
					<xsd:element name="TypeName" type="xsd:QName" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>

                        The TypeName element is used to enumerate the

                        feature types to be described.  If no TypeName

                        elements are specified then all features should

                        be described.  The name must be a valid type

                        that belongs to the feature content as defined

                        by the GML Application Schema.

                     </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="outputFormat" type="xsd:string" use="optional" default="text/xml; subtype=gml/3.1.1">
					<xsd:annotation>
						<xsd:documentation>

                     The outputFormat attribute is used to specify what schema

                     description language should be used to describe features.

                     The default value of 'text/xml; subtype=3.1.1' means that

                     the WFS must generate a GML3 application schema that can

                     be used to validate the GML3 output of a GetFeature

                     request or feature instances specified in Transaction

                     operations.

                     For the purposes of experimentation, vendor extension,

                     or even extensions that serve a specific community of

                     interest, other acceptable output format values may be

                     advertised by a WFS service in the capabilities document.

                     The meaning of such values in not defined in the WFS 

                     specification.  The only proviso is such cases is that

                     clients may safely ignore outputFormat values that do

                     not recognize.

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- RESPONSE -->
	<!-- ================================================================== -->
	<!-- For the outputFormat value of 'text/xml; subtype=3.1.1' a WFS      -->
	<!-- must generate a valid XML-Schema/GML3 application schema that      -->
	<!-- describes that requested feature type(s).                          -->
	<!-- ================================================================== -->
	<!-- ================================================================== -->
	<!-- =   GETFEATURES Request and Response                             = -->
	<!-- ================================================================== -->
	<xsd:element name="GetFeature" type="wfs:GetFeatureType">
		<xsd:annotation>
			<xsd:documentation>

            The GetFeature element is used to request that a Web Feature

            Service return feature type instances of one or more feature

            types.

         </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetFeatureType">
		<xsd:annotation>
			<xsd:documentation>

            A GetFeature element contains one or more Query elements

            that describe a query operation on one feature type.  In

            response to a GetFeature request, a Web Feature Service

            must be able to generate a GML3 response that validates

            using a schema generated by the DescribeFeatureType request.

            A Web Feature Service may support other possibly non-XML

            (and even binary) output formats as long as those formats

            are advertised in the capabilities document.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="wfs:BaseRequestType">
				<xsd:sequence>
					<xsd:element ref="wfs:Query" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="resultType" type="wfs:ResultTypeType" use="optional" default="results">
					<xsd:annotation>
						<xsd:documentation>

                     The resultType attribute is used to indicate

                     what response a WFS should return to user once

                     a GetFeature request is processed.

                     Possible values are:

                        results - meaning that the full response set

                                  (i.e. all the feature instances) 

                                  should be returned.

                        hits    - meaning that an empty response set

                                  should be returned (i.e. no feature

                                  instances should be returned) but

                                  the "numberOfFeatures" attribute

                                  should be set to the number of feature

                                  instances that would be returned.

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="outputFormat" type="xsd:string" use="optional" default="text/xml; subtype=gml/3.1.1">
					<xsd:annotation>
						<xsd:documentation>

                     The outputFormat attribute is used to specify the output

                     format that the Web Feature Service should generate in

                     response to a GetFeature or GetFeatureWithLock element.

                     The default value of 'text/xml; subtype=gml/3.1.1'

                     indicates that the output is an XML document that

                     conforms to the Geography Markup Language (GML)

                     Implementation Specification V3.1.1.

                     For the purposes of experimentation, vendor extension,

                     or even extensions that serve a specific community of

                     interest, other acceptable output format values may be

                     used to specify other formats as long as those values

                     are advertised in the capabilities document.

                     For example, the value WKB may be used to indicate that a 

                     Well Known Binary format be used to encode the output.

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="maxFeatures" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                     The maxFeatures attribute is used to specify the maximum

                     number of features that a GetFeature operation should

                     generate (regardless of the actual number of query hits).

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="traverseXlinkDepth" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                     This attribute indicates the depth to which nested property

                     XLink linking element locator attribute (href) XLinks are

                     traversed and resolved if possible.  A value of "1"

                     indicates that one linking element locator attribute

                     (href) Xlink will be traversed and the referenced element

                     returned if possible, but nested property XLink linking

                     element locator attribute (href) XLinks in the returned

                     element are not traversed.  A value of "*" indicates that

                     all nested property XLink linking element locator attribute

                     (href) XLinks will be traversed and the referenced elements

                     returned if possible.  The range of valid values for this

                     attribute consists of positive integers plus "*".

                     If this attribute is not specified then no xlinks shall be 

                     resolved and the value of traverseXlinkExpiry attribute (if

                     it specified) may be ignored.

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="traverseXlinkExpiry" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                     The traverseXlinkExpiry attribute value is specified in

                     minutes.  It indicates how long a Web Feature Service

                     should wait to receive a response to a nested GetGmlObject

                     request.	

                     This attribute is only relevant if a value is specified 

                     for the traverseXlinkDepth attribute.

                  </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cursor" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>PHR specific attribute : used in conjunction with maxFeatures to iterate over the results.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="presentation" type="wfs:PresentationType" use="optional">
					<xsd:annotation>
						<xsd:documentation>PHR specific attribute</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="PresentationType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="brief"/>
			<xsd:enumeration value="full"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ResultTypeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="results">
				<xsd:annotation>
					<xsd:documentation>

                  Indicates that a complete response should be generated

                  by the WFS.  That is, all response feature instances

                  should be returned to the client.

               </xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hits">
				<xsd:annotation>
					<xsd:documentation>

                  Indicates that an empty response should be generated with

                  the "numberOfFeatures" attribute set (i.e. no feature

                  instances should be returned).  In this manner a client may

                  determine the number of feature instances that a GetFeature

                  request will return without having to actually get the 
                  entire result set back.

               </xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Query" type="wfs:QueryType">
		<xsd:annotation>
			<xsd:documentation>

            The Query element is used to describe a single query.

            One or more Query elements can be specified inside a

            GetFeature element so that multiple queries can be 

            executed in one request.  The output from the various

            queries are combined in a wfs:FeatureCollection element

            to form the response document.

         </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="QueryType">
		<xsd:annotation>
			<xsd:documentation>

            The Query element is of type QueryType.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="wfs:XlinkPropertyName"/>
				<xsd:element ref="wfs:PropertyName">
					<xsd:annotation>
						<xsd:documentation>

                   The Property element is used to specify one or more

                   properties of a feature whose values are to be retrieved

                   by a Web Feature Service.  

                   

                   While a Web Feature Service should endeavour to satisfy

                   the exact request specified, in some instance this may

                   not be possible.  Specifically, a Web Feature Service

                   must generate a valid GML3 response to a Query operation.

                   The schema used to generate the output may include 

                   properties that are mandatory.  In order that the output

                   validates, these mandatory properties must be specified

                   in the request.  If they are not, a Web Feature Service

                   may add them automatically to the Query before processing

                   it.  Thus a client application should, in general, be

                   prepared to receive more properties than it requested.

   

                   Of course, using the DescribeFeatureType request, a client

                   application can determine which properties are mandatory

                   and request them in the first place.

                </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ogc:Function">
					<xsd:annotation>
						<xsd:documentation>

                   A function may be used as a select item in a query.

                   However, if a function is used, care must be taken

                   to ensure that the result type matches the type in the 

 

                </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<!-- PHR : XMLSPY 2006 - XlinkPropertyName added (not a PropertyName substitution anymore) -->
			</xsd:choice>
			<xsd:element ref="ogc:Filter" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>

                The Filter element is used to define spatial and/or non-spatial

                constraints on query.  Spatial constrains use GML3 to specify

                the constraining geometry.  A full description of the Filter

                element can be found in the Filter Encoding Implementation

                Specification.

             </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="ogc:SortBy" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>

                The SortBy element is used specify property names whose

                values should be used to order (upon presentation) the

                set of feature instances that satisfy the query.

             </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="handle" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>

               The handle attribute allows a client application

               to assign a client-generated identifier for the 

               Query.  The handle is included to facilitate error

               reporting.  If one Query in a GetFeature request

               causes an exception, a WFS may report the handle

               to indicate which query element failed.  If the a

               handle is not present, the WFS may use other means

               to localize the error (e.g. line numbers).

            </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="typeName" type="wfs:TypeNameListType" use="required">
			<xsd:annotation>
				<xsd:documentation>

              The typeName attribute is a list of one or more

              feature type names that indicate which types 

              of feature instances should be included in the

              reponse set.  Specifying more than one typename

              indicates that a join operation is being performed.

              All the names in the typeName list must be valid

              types that belong to this query's feature content

              as defined by the GML Application Schema.

           </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="featureVersion" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>

              For systems that implement versioning, the featureVersion

              attribute is used to specify which version of a particular

              feature instance is to be retrieved.  A value of ALL means

              that all versions should be retrieved.  An integer value

              'i', means that the ith version should be retrieve if it

              exists or the most recent version otherwise.

           </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="srsName" type="xsd:anyURI" use="optional">
			<xsd:annotation>
				<xsd:documentation>

              This attribute is used to specify a specific WFS-supported SRS

              that should be used for returned feature geometries.  The value

              may be the WFS StorageSRS value, DefaultRetrievalSRS value, or

              one of AdditionalSRS values.  If no srsName value is supplied,

              then the features will be returned using either the

              DefaultRetrievalSRS, if specified, and StorageSRS otherwise.

              For feature types with no spatial properties, this attribute

              must not be specified or ignored if it is specified.

           </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="Base_TypeNameListType">
		<xsd:list itemType="xsd:QName"/>
	</xsd:simpleType>
	<xsd:simpleType name="TypeNameListType">
		<xsd:restriction base="wfs:Base_TypeNameListType">
			<xsd:pattern value="((\w:)?\w(=\w)?){1,}">
				<xsd:annotation>
					<xsd:documentation>

                  Example typeName attribute value might be:


                     typeName="ns1:Inwatera_1m=A, ns2:CoastL_1M=B"


                  In this example, A is an alias for ns1:Inwatera_1m

                  and B is an alias for ns2:CoastL_1M.

               </xsd:documentation>
				</xsd:annotation>
			</xsd:pattern>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- RESPONSE -->
	<xsd:element name="FeatureCollection" type="wfs:FeatureCollectionType" substitutionGroup="gml:_FeatureCollection">
		<xsd:annotation>
			<xsd:documentation>

            This element is a container for the response to a GetFeature

            or GetFeatureWithLock (WFS-transaction.xsd) request.

         </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="FeatureCollectionType">
		<xsd:annotation>
			<xsd:documentation>

            This type defines a container for the response to a 

            GetFeature or GetFeatureWithLock request.  If the

            request is GetFeatureWithLock, the lockId attribute

            must be populated.  The lockId attribute can otherwise

            be safely ignored.

         </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gml:AbstractFeatureCollectionType">
				<xsd:attribute name="lockId" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                  The value of the lockId attribute is an identifier

                  that a Web Feature Service generates when responding

                  to a GetFeatureWithLock request.  A client application

                  can use this value in subsequent operations (such as a

                  Transaction request) to reference the set of locked

                  features.

               </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="timeStamp" type="xsd:dateTime" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                  The timeStamp attribute should contain the date and time

                  that the response was generated.

               </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="numberOfFeatures" type="xsd:nonNegativeInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>

                  The numberOfFeatures attribute should contain a

                  count of the number of features in the response.

                  That is a count of all features elements dervied

                  from gml:AbstractFeatureType.

               </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
